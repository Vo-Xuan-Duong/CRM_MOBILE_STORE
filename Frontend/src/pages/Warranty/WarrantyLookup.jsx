import React, { useMemo, useState } from "react";
import { Link } from "react-router-dom";
import "./WarrantyLookup.css";

/** ===== Mock search (thay b·∫±ng g·ªçi API th·∫≠t) ===== */
const mockSearchWarranty = async ({ imei, phone }) => {
  await new Promise(r => setTimeout(r, 600)); // gi·∫£ l·∫≠p loading
  if (!imei && !phone) return { ok: false, error: "Vui l√≤ng nh·∫≠p IMEI ho·∫∑c SƒêT." };

  // demo d·ªØ li·ªáu
  const demo = {
    customer: { name: "Nguy·ªÖn VƒÉn An", phone: "0912345678" },
    device: { productName: "iPhone 15 128GB", imei: "356789012345678", color: "Black", sku: "IP15-128-B" },
    order: { code: "DH-00125", date: "2025-05-12", price: 23990000 },
    warranty: {
      startDate: "2025-05-12",
      endDate: "2026-05-12",
      status: "C√≤n h·∫°n", // "H·∫øt h·∫°n" | "ƒêang x·ª≠ l√Ω"
      history: [
        { at: "2025-06-22", title: "Ti·∫øp nh·∫≠n b·∫£o h√†nh", note: "L·ªói loa tho·∫°i nh·ªè" },
        { at: "2025-06-24", title: "Ho√†n t·∫•t b·∫£o h√†nh", note: "Thay loa, v·ªá sinh m√°y" }
      ],
    },
  };

  // n·∫øu IMEI/phone kh·ªõp th√¨ tr·∫£ demo, ng∆∞·ª£c l·∫°i ‚Äúkh√¥ng t√¨m th·∫•y‚Äù
  const matched = (imei && imei.endsWith("5678")) || (phone && phone.endsWith("678"));
  if (!matched) return { ok: false, error: "Kh√¥ng t√¨m th·∫•y b·∫£o h√†nh v·ªõi th√¥ng tin ƒë√£ nh·∫≠p." };
  return { ok: true, data: demo };
};

const formatVND = (n) =>
  n.toLocaleString("vi-VN", { style: "currency", currency: "VND", maximumFractionDigits: 0 });

const WarrantyLookup = () => {
  const [imei, setImei] = useState("");
  const [phone, setPhone] = useState("");
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);   // {ok, data|error}
  const [touched, setTouched] = useState(false);

  const imeiHint = useMemo(() => {
    if (!touched) return "";
    if (!imei) return "";
    if (imei.length < 14) return "IMEI th∆∞·ªùng 14‚Äì16 k√Ω t·ª±.";
    return "";
  }, [imei, touched]);

  const onSubmit = async (e) => {
    e.preventDefault();
    setTouched(true);
    setLoading(true);
    setResult(null);
    const res = await mockSearchWarranty({ imei: imei.trim(), phone: phone.trim() });
    setResult(res);
    setLoading(false);
  };

  const onClear = () => {
    setImei(""); setPhone(""); setResult(null); setTouched(false);
  };

  return (
    <div className="wl">
      <div className="wl__head">
        <h1 className="wl__title">Tra c·ª©u b·∫£o h√†nh</h1>
        <div className="wl__actions">
         <button className="btn btn--green" onClick={()=>alert("TODO: m·ªü m√†n h√¨nh qu√©t QR/Barcode")}>
  Qu√©t QR / Barcode
</button>
        </div>
      </div>

      {/* Form tra c·ª©u */}
      <form className="card wl__form" onSubmit={onSubmit}>
        <div className="wl__form-grid">
          <div className="form-group">
            <label>IMEI / Serial</label>
            <input
              value={imei}
              onChange={(e)=>setImei(e.target.value)}
              onBlur={()=>setTouched(true)}
              placeholder="Nh·∫≠p IMEI (14‚Äì16 k√Ω t·ª±)"
              className={imeiHint ? "is-invalid" : ""}
            />
            {imeiHint && <div className="hint error">{imeiHint}</div>}
          </div>

          <div className="form-group">
            <label>S·ªë ƒëi·ªán tho·∫°i kh√°ch h√†ng (tu·ª≥ ch·ªçn)</label>
            <input
              value={phone}
              onChange={(e)=>setPhone(e.target.value)}
              placeholder="VD: 0912xxxxxx"
            />
            <div className="hint">C√≥ th·ªÉ d√πng SƒêT ƒë·ªÉ tra nhanh l·ªãch s·ª≠ thi·∫øt b·ªã.</div>
          </div>

          <div className="form-actions">
            <button type="submit" className="btn btn--primary" disabled={loading}>
              {loading ? "ƒêang tra..." : "Tra c·ª©u"}
            </button>
            <button type="button" className="btn" onClick={onClear} disabled={loading}>L√†m m·ªõi</button>
          </div>
        </div>
      </form>

      {/* K·∫øt qu·∫£ */}
      <div className="wl__result">
        {!result && <EmptyState />}

        {result && !result.ok && (
          <div className="card empty error">
            <div className="empty__icon">‚ö†Ô∏è</div>
            <div className="empty__title">{result.error}</div>
            <div className="empty__desc">Ki·ªÉm tra l·∫°i IMEI/SƒêT ho·∫∑c th·ª≠ qu√©t QR/Barcode.</div>
          </div>
        )}

        {result && result.ok && (
          <div className="wl__grid">
            <InfoCard data={result.data} />
            <Timeline history={result.data.warranty.history} />
          </div>
        )}
      </div>
    </div>
  );
};

/** ====== Presentational components ====== */
const Badge = ({ kind = "default", children }) => {
  const cls = `badge ${kind === "success" ? "badge--success" : kind === "danger" ? "badge--danger" : kind === "warning" ? "badge--warning" : ""}`;
  return <span className={cls}>{children}</span>;
};

const EmptyState = () => (
  <div className="card empty">
    <div className="empty__icon">üîé</div>
    <div className="empty__title">Nh·∫≠p IMEI ho·∫∑c SƒêT ƒë·ªÉ tra b·∫£o h√†nh</div>
    <div className="empty__desc">H·ªó tr·ª£ qu√©t QR/Barcode ƒë·ªÉ ƒëi·ªÅn nhanh.</div>
  </div>
);

const Row = ({ label, children }) => (
  <div className="row">
    <div className="row__label">{label}</div>
    <div className="row__value">{children}</div>
  </div>
);

const InfoCard = ({ data }) => {
  const { customer, device, order, warranty } = data;

  const now = new Date();
  const end = new Date(warranty.endDate);
  const isExpired = end < now;
  const badgeKind = warranty.status === "ƒêang x·ª≠ l√Ω" ? "warning" : isExpired ? "danger" : "success";

  return (
    <div className="card">
      <div className="card__head">
        <h3 className="card__title">Th√¥ng tin b·∫£o h√†nh</h3>
        <Badge kind={badgeKind}>{isExpired ? "H·∫øt h·∫°n" : warranty.status}</Badge>
      </div>

      <div className="card__section">
        <h4 className="section__title">Kh√°ch h√†ng</h4>
        <Row label="H·ªç t√™n">{customer.name}</Row>
        <Row label="SƒêT">{customer.phone}</Row>
      </div>

      <div className="card__section">
        <h4 className="section__title">Thi·∫øt b·ªã</h4>
        <Row label="S·∫£n ph·∫©m">{device.productName}</Row>
        <Row label="IMEI">{device.imei}</Row>
        <Row label="M√†u/Model">{device.color} ‚Ä¢ {device.sku}</Row>
      </div>

      <div className="card__section">
        <h4 className="section__title">ƒê∆°n h√†ng</h4>
        <Row label="M√£ ƒë∆°n">{order.code}</Row>
        <Row label="Ng√†y mua">{order.date}</Row>
        <Row label="Gi√° tr·ªã">{formatVND(order.price)}</Row>
      </div>

      <div className="card__section">
        <h4 className="section__title">B·∫£o h√†nh</h4>
        <Row label="B·∫Øt ƒë·∫ßu">{warranty.startDate}</Row>
        <Row label="K·∫øt th√∫c">{warranty.endDate}</Row>
        <Row label="Tr·∫°ng th√°i">
          <Badge kind={badgeKind}>{isExpired ? "H·∫øt h·∫°n" : warranty.status}</Badge>
        </Row>
      </div>

      <div className="card__footer">
        <button className="btn btn--green" onClick={()=>alert("TODO: t·∫°o phi·∫øu ti·∫øp nh·∫≠n")}>Ti·∫øp nh·∫≠n b·∫£o h√†nh</button>
        <button className="btn" onClick={()=>alert("TODO: ƒë√°nh d·∫•u ho√†n t·∫•t")}>Ho√†n t·∫•t / Tr·∫£ m√°y</button>
      </div>
    </div>
  );
};

const Timeline = ({ history = [] }) => (
  <div className="card">
    <div className="card__head">
      <h3 className="card__title">L·ªãch s·ª≠ x·ª≠ l√Ω</h3>
    </div>
    <ul className="timeline">
      {history.length === 0 && <li className="timeline__empty">Ch∆∞a c√≥ l·ªãch s·ª≠ b·∫£o h√†nh.</li>}
      {history.map((h, i) => (
        <li key={i} className="timeline__item">
          <div className="dot" />
          <div className="content">
            <div className="time">{h.at}</div>
            <div className="title">{h.title}</div>
            {h.note && <div className="note">{h.note}</div>}
          </div>
        </li>
      ))}
    </ul>
  </div>
);


export default WarrantyLookup;
